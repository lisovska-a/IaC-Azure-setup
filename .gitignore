# Terraform .gitignore Template - Updated 2025

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negation
# The commented out entries below show how to achieve this:
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*.tfplan

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore Mac .DS_Store files
.DS_Store

# Ignore Terraform lock file (optional, see note below)
.terraform.lock.hcl

# Ignore Terraform Cloud/Enterprise run data
.terraform/

# Ignore backup files
*.backup
*.bak

# Ignore log files
*.log

# Ignore temporary files
*.tmp
*.temp

# Ignore IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore OS generated files
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Ignore terragrunt cache
.terragrunt-cache/

# Ignore Terraform workspaces
terraform.tfstate.d/

# Ignore provider cache
.terraform.d/

# Ignore custom Terraform modules (if using local development)
# modules/
# .terraform-modules/

# Ignore environment-specific files
.env
.env.local
.env.*.local

# Ignore terraform documentation
terraform-docs.yml
.terraform-docs.yml